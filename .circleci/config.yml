version: 2.1

# Define the jobs we want to run for this project
jobs:
  Catalog-Service:
    docker:
      - image: circleci/openjdk:11-buster-node-browsers-legacy
    steps:
      - checkout
      - run: 
          name: catalog-service
          command: |
            ls
            cd catalog-service
            mvn clean package -Dspring.profiles.active=test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find ./catalog-service -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit

  Payment-Service:
    docker:
      - image: circleci/openjdk:11-buster-node-browsers-legacy
    steps:
      - checkout
      - run:
          name: payment-service
          command: |
            ls
            cd payment-service
            mvn clean package -Dspring.profiles.active=test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find ./payment-service -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
          
  Invoice-Service:
    docker:
      - image: circleci/openjdk:11-buster-node-browsers-legacy
    steps:
      - checkout
      - run:
          name: invoice-service
          command: |
            ls
            cd invoice-service
            mvn clean package -Dspring.profiles.active=test
      - run:
          name: Save test results
          command: |
            mkdir -p ~/test-results/junit/
            find ./invoice-service -type f -regex ".*/target/surefire-reports/.*xml" -exec cp {} ~/test-results/junit/ \;
          when: always
      - store_test_results:
          path: ~/test-results
      - store_artifacts:
          path: ~/test-results/junit
            
# Orchestrate our job run sequence
workflows:
  build_and_test:
    jobs:
      - Catalog-Service
      - Payment-Service
      - Invoice-Service
